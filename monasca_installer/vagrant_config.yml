#  Use this file as a template when creating a new config file.
#  Many of the defaults can be left as is (although password changes
#  are most likely desired).  
#  The values that must be configured are:
#      influxdb_url
#      mysql_host
#      keystone_host
#      monasca_api_host
#      monitored_services
#      hosts
#             
#  Here is the basic structure of this file.
#
#  The entire config file is read.  The sections below are removed from the 
#  config file data and used to create the ansbile group_vars, host_vars, and hosts files.
#  Then the remaining config data is written to the monasca group_vars file.
#
#     all_config:
#       # group_vars variables for all hosts. 
#     master_config:
#       # group_vars variables for monasca_master.
#     workers_config:
#       # group_vars variables for monasca_workers.
#     monitored_services:
#       # hosts by services to install the monasca_agent.
#       used to update the hosts file and services for the 
#       external service (i.e. glance, neutron) group vars.
#     agent_config:
#       # the monasca_agent dictionary that contains service.
#         template used for the external service group vars file.
#     hosts:
#       # list of hosts within the monasca cluster.
#       monasca server hostname, ip, and sequential kafka id.
#
# Random passwords can be generated on request throughout the configuration.
# To insert a random password at any point, use this string:  PLEASE-GENERATE

# Paths used by the installed version of Horizon
dashboard_path: /usr/share/openstack-dashboard/openstack_dashboard/
grafana_base_dir: /opt
grafana_dest: /usr/share/openstack-dashboard/static/grafana
panel_dest_path: /usr/share/openstack-dashboard/monitoring

# SSL stuff, if enabled, goes here. Required parameters for SSL are...
# cacert_src, cacert_name
# mysql_ssl_ca, mysql_ssl_cert, mysql_ssl_cert_src, mysql_ssl_key, mysql_ssl_key_src, mysql_ssl
# influxdb_ssl_certificate, influxdb_ssl_certificate_src

# Load balanced vips
influxdb_url: http://192.168.10.6:8086
mysql_host: 192.168.10.6

# API settings
api_region: vagrant-useast
api_influxdb_user: mon_api
api_influxdb_password: password

# When mysql on external host from monasca, set this to false
mysql_install_on_monasca: true

all_config:
  # The variables in 'all' can be used by any host (monasca or external)
  
  # Note: The mysql schema path default is: monasca_schema_file: /var/lib/mysql/mon.sql
  mysql_root_password: password
  mysql_admin: root
  mysql_admin_password: password
  api_mysql_user: monapi
  api_mysql_password: password
  thresh_mysql_user: thresh
  thresh_mysql_password: password
  notification_mysql_user: notification
  notification_mysql_password: password
  mysql_users:
    notification: '{{notification_mysql_password}}'
    monapi: '{{api_mysql_password}}'
    thresh: '{{thresh_mysql_password}}'

  monasca_api_host: 192.168.10.6
  # Load balanced vip for monasca_api url
  monasca_api_url: http://{{monasca_api_host}}:8080/v2.0
  
  # if using hlinux use:
  # percona_package: percona-xtradb-cluster-server-5.5
  # setup_percona_repo: false  
  percona_package: percona-xtradb-cluster-56
  
  keystone_admin: admin
  keystone_admin_password: password
  keystone_admin_token: ADMIN
  keystone_endpoint: {host: '{{ monasca_api_host }}', name: monasca}
  keystone_host: 192.168.10.5
  keystone_project: test
  keystone_project_admin: mini-mon
  keystone_project_admin_password: password
  keystone_monasca_agent_password: password
  keystone_url: http://{{keystone_host}}:35357/v3
  keystone_users:
    mini-mon: {password: "{{keystone_project_admin_password}}", role: monasca-user, project: "{{keystone_project}}"}
    monasca-agent: {password: "{{keystone_monasca_agent_password}}", role: monasca-agent, project: "{{keystone_project}}"}

monitored_services:
  # Hosts by service to install the monasca-agent.  One agent is installed per host.
  # The service name is used to configure the agent to emit metrics for that service.
  # A host having more than one service can only be listed under 'multi-service'.
  # hostname can be the pingable domain name or ip address.
  # Note: the monasca hosts are ignored here, since they are defined in hosts.
  - service: monasca
    hosts:
      - hostname: 192.168.10.6
      - hostname: 192.168.10.7
      - hostname: 192.168.10.8
  - service: devstack
    hosts:
      - hostname: 192.168.10.5

hosts:
# The monasca hosts
  - hostname: 192.168.10.6
    internal_ip: 192.168.10.6
    kafka_id: 0
  - hostname: 192.168.10.7
    internal_ip: 192.168.10.7
    kafka_id: 1
  - hostname: 192.168.10.8
    internal_ip: 192.168.10.8
    kafka_id: 2

#The monasca_agent for monasca
monasca_agent:
  user: monasca-agent
  password: "{{keystone_monasca_agent_password}}"
  project: "{{keystone_project}}"
  service: monitoring

persister_influxdb_user: mon_persister
persister_influxdb_password: password
smtp_host: localhost
wsrep_cluster_name: monasca
wsrep_node_name: '{{inventory_hostname}}'
wsrep_sst_receive_address: '{{inventory_hostname}}'

influxdb_replication_factor: 3
influxdb_version: 0.8.1
influxdb_raft_port: 9090
influxdb_hostname: "{{ inventory_hostname }}"

# The ports are not written to a config file directly, but used by the generator
zookeeper_client_port: 2181
kafka_client_port: 9092

master_config:
  # Enable/disable services
  storm_nimbus_enabled: true
  storm_supervisor_enabled: false

  # Schema settings
  influxdb_users:
    mon_api: '{{api_influxdb_password}}'
    mon_persister: '{{persister_influxdb_password}}'
  kafka_topics:
    metrics: { replicas: 3, partitions: 64 }
    events: { replicas: 3, partitions: 12 }
    raw-events: { replicas: 3, partitions: 12 }
    transformed-events: { replicas: 3, partitions: 12 }
    alarm-state-transitions: { replicas: 3, partitions: 12 }
    alarm-notifications: { replicas: 3, partitions: 12 }
    retry-notifications: { replicas: 3, partitions: 3 }
  # Leave undefined if there is no root password for mysql
  mysql_admin_password: password

  # Other settings
  influxdb:
    version: '{{influxdb_version}}'
    raft_port: '{{influxdb_raft_port}}'
    seed_servers: []
    replication_factor: '{{influxdb_replication_factor}}'
  influxdb_retention_policy: "365d"
  influxdb_shard_duration: "7d"
  percona_master_node: true

workers_config:
  # Enable/disable services
  storm_nimbus_enabled: false
  storm_supervisor_enabled: true

  # Other settings
  influxdb:
    version: '{{influxdb_version}}'
    raft_port: '{{influxdb_raft_port}}'
    replication_factor: '{{influxdb_replication_factor}}'

agent_config:
  monasca_agent:
  # The service will be populated by monitored_services service.
  # The monasca_agent dictionary is output in the service group_var file.
    user: monasca-agent
    password: "{{keystone_monasca_agent_password}}"
    project: "{{keystone_project}}"
    service: monitoring
